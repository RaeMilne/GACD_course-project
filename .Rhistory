a <- available.packages()
head(rownames(a), 3)
install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 1000)
z * 2 + 1000
my
my_div
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
c(0.5, 55, -10, 6)
num_vect <- c(0, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Rae")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sept="")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
swirl()
x <- x(44, NA, 5, NA)
X <- c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x[7])
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
VECT
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5, byrow = false, dimnames = NULL)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- ("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
colnames(my_data)
colnames(my_data) <- cnames
my_data
0
read.csv("/Desktop/coursera_R/hw1_data.csv")
clear
?read.csv
dd
// This demonstrates my installation of R Studio for The Data Scientist's Toolbox course
add2(65, 7)
add2 <- function(x, y) {
x + y
}
add2(6, 7)
above <- function (x, n) {
use <- x > n
x[use]
}
x<- 1:56
above(x, 12)
above <- function (x, n=10) {
use <- x > n
x[use]
}
above(x)
columnMean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnMean(x)
lst()
ls()
clean
cube <- function(x, n) {
x^3
}
cube(3)
n
x <- 1:10
if (x > 5) {
x <- 0
}
x<- 7
if (x > 5) {
x <- 0
}
x
ls()
rm(list = ls())
ls()
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
rm(list = ls())
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
y
rm(list = ls())
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h
h(3)
f <- 7
h(3)
h(3, 2, 6)
?position
?write.table
rm(list=ls())
setwd("/Users/rae_milne/Desktop/coursera_R/GACD_course-project")
source("runanalysis.R")
tidyData <- runanalysis()
tidyTest <- read.table("tidyData.txt")
dim(tidyTest)
names(tidyTest)
namesCol <- names(tidyTest)
namesCol
lappy(namesCol)
lapply(namesCol)
melt(namesCol)
trainSubject
trainSubject <- read.table("./data/train/subject_train.txt", stringsAsFactors = FALSE)
names(trainSubject)
tidyTrain <- dcast(trainSubject, "V2")
require(reshape2)
tidyTrain <- dcast(trainSubject, "V2")
a <- table(trainSubject)
a
testSubject <- read.table("./data/test/subject_test.txt", stringsAsFactors = FALSE)
b <- table(testSubject)
b
